// /generators/app/index.js

// 创建 yeoman generator 的核心功能模块.
const Generator = require('yeoman-generator');
// 文件读写模块.
const fs = require('fs');
const path = require('path');
// 文件读写模块，比 fs 模块多了 promise 支持.
//const fse = require('fs-extra');

/**
 * Base generator.
 */
module.exports = class extends Generator {

  /** 构造函数 */
  constructor(args, opts) {
    // 继承必须.
    super(args, opts);

    // 获取 AppName.
    this.appName = path.basename(process.cwd());
    // 设置 Author.
    this.appAuthor = "Eded.Wang";
  }

  /**
   * 初始化方法.
   */
  initializing() {
    this.log("开始构建项目...");
  }

  /**
   * 写入配置
   */
  configuring() {

    // 获取 package 配置模板.
    let defaultSettings = this.fs.readJSON( this.templatePath('package.json') );
    // 做新 package 配置文件.
    let packageSettings = {
      name: this.appName,
      private: true,
      version: '0.0.1',
      description: `${this.appName} - Generated by generator-reactweb`,
      main: 'index.js',
      scripts: defaultSettings.scripts,
      repository: defaultSettings.repository,
      keywords: [],
      author: this.appAuthor,
      devDependencies: defaultSettings.devDependencies,
      dependencies: defaultSettings.dependencies
    };

    // 写入 package.json.
    this.fs.writeJSON(this.destinationPath('package.json'), packageSettings);
  }

  /**
   * 写入文件
   */
  writing() {

    this.log( this.fs["mkdirSync"] );

    const filelist = [
      'src',
      '.babelrc',
      '.eslintrc',
      '.gitignore',
      'webpack.config.js'
    ];

    filelist.map(item => (
      this.fs.copy(
        this.templatePath(item),
        this.destinationPath(item)
      );
    ));

    fs.mkdirSync('dist');

    this.fs.copyTpl(
      this.templatePath('public/index.html'),
      this.destinationPath('public/index.html'),
      { title: 'Templating with Yeoman' }
    );

  }

  /**
   * 安装方法
   */
  install() {
    // 安装 package 安装.
    this.installDependencies({ bower: false });
  }

};
